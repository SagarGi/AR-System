package com.gces.minor_project_i;


import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.nio.charset.StandardCharsets;
import java.security.*;
/**
 *
 * @author Sagarchigni
 */
public class staffadd extends javax.swing.JDialog {
    static int ivalid = 0, pvalid = 0, snvalid = 0, emailvalid = 0, contactnumbervalid = 0, addressvalid = 0;
    /**
     * Creates new form staffadd
     */
    public staffadd(java.awt.Frame parent, boolean modal) {
        
        
        initComponents();
        
    }
        public static StringBuffer shaFunction(String plainText)
	{
		StringBuffer hexString = new StringBuffer();
		try
		{
			MessageDigest md = MessageDigest.getInstance("SHA-256");
			byte[] encodedHash = md.digest(plainText.getBytes(StandardCharsets.UTF_8));
			for (int i = 0; i < encodedHash.length; i++)
			{
				String hex = Integer.toHexString(0xff & encodedHash[i]); //to convert bytes to hexadecimal equivalent and that to string
				if (hex.length() == 1) hexString.append('0');
				hexString.append(hex);
			}
			//System.out.println(hexString);
			return hexString;
		} catch(NoSuchAlgorithmException e)
		{
			e.printStackTrace();
		}
		return hexString;
	}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        shiftButtonGroup = new javax.swing.ButtonGroup();
        dialogPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        staffIdLabel = new javax.swing.JLabel();
        staffIdTextField = new javax.swing.JTextField();
        staffIdSeperator = new javax.swing.JSeparator();
        showValidationOfStaffId = new javax.swing.JLabel();
        staffNameLabel = new javax.swing.JLabel();
        staffNameTextField = new javax.swing.JTextField();
        staffNameSeparator = new javax.swing.JSeparator();
        showValidationOfStaffName = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        genderLabel = new javax.swing.JLabel();
        female = new javax.swing.JRadioButton();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        passwordSeparator = new javax.swing.JSeparator();
        showValidationOfPassword = new javax.swing.JLabel();
        showpass = new javax.swing.JCheckBox();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        emailSeparator = new javax.swing.JSeparator();
        showValidationOfEmail = new javax.swing.JLabel();
        contactnoLabel = new javax.swing.JLabel();
        frontNumberLabel = new javax.swing.JLabel();
        contactNumberTextField = new javax.swing.JTextField();
        contactNumberSeparator = new javax.swing.JSeparator();
        showValidationOfContactNumber = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        addressSeparator = new javax.swing.JSeparator();
        showValidationOfAddress = new javax.swing.JLabel();
        shiftLabel = new javax.swing.JLabel();
        morning = new javax.swing.JRadioButton();
        day = new javax.swing.JRadioButton();
        addButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        photoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dialogPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        //----------------------------------------------------------------------------//
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        this.setBackground(new Color(0,0,0,0));
        dialogPanel.setBackground(new Color(0,0,0,0));
        //----------------------------------------------------------------------------//
        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Enter Staff Information Below:");
        dialogPanel.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 330, 20));

        staffIdLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        staffIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        staffIdLabel.setText("Staff-ID:");
        dialogPanel.add(staffIdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 90, 20));

        staffIdTextField.setBackground(new java.awt.Color(44, 102, 76));
        staffIdTextField.setForeground(new java.awt.Color(255, 255, 255));
        staffIdTextField.setBorder(null);
        staffIdTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                staffIdTextFieldKeyReleased(evt);
            }
        });
        dialogPanel.add(staffIdTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 200, 20));
        dialogPanel.add(staffIdSeperator, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 200, 10));

        showValidationOfStaffId.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showValidationOfStaffId.setForeground(new java.awt.Color(255, 0, 0));
        dialogPanel.add(showValidationOfStaffId, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 200, 10));

        staffNameLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        staffNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        staffNameLabel.setText("Staff Name:");
        dialogPanel.add(staffNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, 20));

        staffNameTextField.setBackground(new java.awt.Color(44, 102, 76));
        staffNameTextField.setForeground(new java.awt.Color(255, 255, 255));
        staffNameTextField.setBorder(null);
        staffNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                staffNameTextFieldKeyReleased(evt);
            }
        });
        dialogPanel.add(staffNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 200, 20));
        dialogPanel.add(staffNameSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 200, 10));

        showValidationOfStaffName.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showValidationOfStaffName.setForeground(new java.awt.Color(255, 0, 0));
        dialogPanel.add(showValidationOfStaffName, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 200, 10));

        male.setBackground(new java.awt.Color(44, 102, 76));
        genderButtonGroup.add(male);
        male.setForeground(new java.awt.Color(255, 255, 255));
        male.setSelected(true);
        male.setText("Male");
        dialogPanel.add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 50, 20));

        genderLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(255, 255, 255));
        genderLabel.setText("Gender:");
        dialogPanel.add(genderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 80, 20));

        female.setBackground(new java.awt.Color(44, 102, 76));
        genderButtonGroup.add(female);
        female.setForeground(new java.awt.Color(255, 255, 255));
        female.setText("Female");
        dialogPanel.add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, 20));

        passwordLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password:");
        dialogPanel.add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, -1, 20));

        passwordField.setBackground(new java.awt.Color(44, 102, 76));
        passwordField.setForeground(new java.awt.Color(255, 255, 255));
        passwordField.setBorder(null);
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });
        dialogPanel.add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 200, 20));
        dialogPanel.add(passwordSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 200, 10));

        showValidationOfPassword.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showValidationOfPassword.setForeground(new java.awt.Color(255, 0, 0));
        dialogPanel.add(showValidationOfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 200, -1));

        showpass.setBackground(new java.awt.Color(44, 102, 76));
        showpass.setForeground(new java.awt.Color(255, 255, 255));
        showpass.setText("Show Password");
        showpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpassActionPerformed(evt);
            }
        });
        dialogPanel.add(showpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, -1));

        emailLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        emailLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailLabel.setText("Email:");
        dialogPanel.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, 20));

        emailTextField.setBackground(new java.awt.Color(44, 102, 76));
        emailTextField.setForeground(new java.awt.Color(255, 255, 255));
        emailTextField.setBorder(null);
        emailTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailTextFieldKeyReleased(evt);
            }
        });
        dialogPanel.add(emailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, 200, 20));
        dialogPanel.add(emailSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, 200, 10));

        showValidationOfEmail.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showValidationOfEmail.setForeground(new java.awt.Color(255, 0, 0));
        dialogPanel.add(showValidationOfEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 200, -1));

        contactnoLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        contactnoLabel.setForeground(new java.awt.Color(255, 255, 255));
        contactnoLabel.setText("Contact no:");
        dialogPanel.add(contactnoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, -1, 20));

        frontNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        frontNumberLabel.setText("+977");
        dialogPanel.add(frontNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, -1, 20));

        contactNumberTextField.setBackground(new java.awt.Color(44, 102, 76));
        contactNumberTextField.setForeground(new java.awt.Color(255, 255, 255));
        contactNumberTextField.setBorder(null);
        contactNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactNumberTextFieldKeyReleased(evt);
            }
        });
        dialogPanel.add(contactNumberTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 170, 20));
        dialogPanel.add(contactNumberSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, 200, 10));

        showValidationOfContactNumber.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showValidationOfContactNumber.setForeground(new java.awt.Color(255, 0, 0));
        dialogPanel.add(showValidationOfContactNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 200, -1));

        addressLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(255, 255, 255));
        addressLabel.setText("Address:");
        dialogPanel.add(addressLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, -1, 20));

        addressTextField.setBackground(new java.awt.Color(44, 102, 76));
        addressTextField.setForeground(new java.awt.Color(255, 255, 255));
        addressTextField.setBorder(null);
        addressTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressTextFieldKeyReleased(evt);
            }
        });
        dialogPanel.add(addressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 450, 200, 20));
        dialogPanel.add(addressSeparator, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 470, 200, 10));

        showValidationOfAddress.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        showValidationOfAddress.setForeground(new java.awt.Color(255, 0, 0));
        dialogPanel.add(showValidationOfAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 200, -1));

        shiftLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        shiftLabel.setForeground(new java.awt.Color(255, 255, 255));
        shiftLabel.setText("Shift:");
        dialogPanel.add(shiftLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, -1, 20));

        morning.setBackground(new java.awt.Color(44, 102, 76));
        shiftButtonGroup.add(morning);
        morning.setForeground(new java.awt.Color(255, 255, 255));
        morning.setSelected(true);
        morning.setText("Morning");
        dialogPanel.add(morning, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, -1, -1));

        day.setBackground(new java.awt.Color(44, 102, 76));
        shiftButtonGroup.add(day);
        day.setForeground(new java.awt.Color(255, 255, 255));
        day.setText("Day");
        dialogPanel.add(day, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 500, -1, -1));

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addButton.setText("Add");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addButtonMouseExited(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        dialogPanel.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 570, 80, -1));

        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("Cancel");
        backButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        dialogPanel.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 570, 80, -1));

        photoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gces/minor_project_i/icons/dialogpanel.png"))); // NOI18N
        dialogPanel.add(photoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 520, 660));

        getContentPane().add(dialogPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 660));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void showpassActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if(showpass.isSelected())
        {
            passwordField.setEchoChar((char)0);
        }
        else
        {
            passwordField.setEchoChar('*');
        }
    }                                        

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        addButton.setBackground(new Color(13, 76, 51));
        addButton.setForeground(new Color(255, 255, 255));
    }                                      

    private void addButtonMouseExited(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        addButton.setBackground(Color.white);
        addButton.setForeground(new Color(0, 0, 0));
    }                                     

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        String sid1=staffIdTextField.getText();
        String suser1=staffNameTextField.getText();
        String spass1=passwordField.getText();
        StringBuffer sb = new StringBuffer(shaFunction(spass1));
        String spass = new String(sb);
        
        String semail1=emailTextField.getText();
        String scontactno1=contactNumberTextField.getText();
        String saddress1=addressTextField.getText();
         //------------//
        SimpleDateFormat format = new SimpleDateFormat("yyyy-M-dd");
        Date d1 = new Date();
        String sdate = new String(format.format(d1));  
        //------------//
        String sidcategory1 = "staff";
        String sgender="Male";
            if(female.isSelected())
                {
                    sgender="Female";
                }
        String sshift="Morning";
            if(day.isSelected())
                {
                    sshift="Day";
                }
        int esivalid=0, esnvalid=0, epvalid=0, eevalid=0, ecnvalid=0, eavalid=0;
        if(sid1.equals(""))
        {
            showValidationOfStaffId.setText("Staff ID Field is Empty!");
            esivalid = 0;
        }
        else{
            showValidationOfStaffId.setText(null);
            esivalid = 1;
        }
        if(suser1.equals(""))
        {
            showValidationOfStaffName.setText("Staff Name Field is Empty!");
            esnvalid = 0;
        }
        else{
            showValidationOfStaffName.setText(null);
            esnvalid = 1;
        }
        if(spass1.equals(""))
        {
            showValidationOfPassword.setText("Password Field is Empty!");
            epvalid = 0;
        }
        else{
            showValidationOfPassword.setText(null);
            epvalid = 1;
        }
        if(semail1.equals(""))
        {
            showValidationOfEmail.setText("Email ID Field is Empty!");
            eevalid = 0;
        }
        else{
            showValidationOfEmail.setText(null);
            eevalid = 1;
        }
        if(scontactno1.equals(""))
        {
            showValidationOfContactNumber.setText("Contact Number Field is Empty!");
            ecnvalid = 0;
        }
        else{
            showValidationOfContactNumber.setText(null);
            ecnvalid = 1;
        }
        if(saddress1.equals(""))
        {
            showValidationOfAddress.setText("Address Field is Empty!");
            eavalid = 0;
        }
        else{
            showValidationOfAddress.setText(null);
            eavalid = 1;
        }
        if(esivalid==1 && esnvalid==1 && epvalid==1 && eevalid==1 && ecnvalid==1 && eavalid==1)
        {
         try
            {
                
                Connection conn;
                Class.forName("com.mysql.jdbc.Driver");
                conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/workerdetails","root","");
                PreparedStatement pstmt = conn.prepareStatement("INSERT INTO workdet VALUES(?,?,?,?,?,?,?,?,?,?)");
                
                if( ivalid == 1 && pvalid == 1 && snvalid == 1 && emailvalid == 1 && contactnumbervalid == 1 && addressvalid == 1)
                {
                pstmt.setString(1,sid1);
                pstmt.setString(2,spass);
                pstmt.setString(3,sidcategory1);
                pstmt.setString(4,suser1);
                pstmt.setString(5,sgender);
                pstmt.setString(6,saddress1);
                pstmt.setString(7,scontactno1);
                pstmt.setString(8,semail1);
                pstmt.setString(9,sdate);
                pstmt.setString(10,sshift);
                
                pstmt.executeUpdate();                                               

                 JOptionPane.showMessageDialog(this, "You have Successfully Submitted Staff Details");
                 this.dispose();
                }
                else{
                   JOptionPane.showMessageDialog(null,"Invalid Data Entered!");
         
                }            
            }catch(java.sql.SQLIntegrityConstraintViolationException icve)
         {
            	JOptionPane.showMessageDialog(null,"ID is already used!");
            }
            catch(Exception e)
            {
                System.out.println(e);
                //e.printStackTrace();  
            }
        }else{
            JOptionPane.showMessageDialog(null,"Field cannot be left Empty");
            
        }

    }                                         

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        backButton.setBackground(new Color(13, 76, 51));
        backButton.setForeground(new Color(255, 255, 255));
    }                                       

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        backButton.setBackground(Color.white);
        backButton.setForeground(new Color(0, 0, 0));
    }                                      

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        this.dispose();
    }                                          

    private void staffIdTextFieldKeyReleased(java.awt.event.KeyEvent evt) {                                             
        String PATTERN = "^[a-z]{0,4}[0-9]{0,4}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(staffIdTextField.getText());
        if(!match.matches())
        {
            showValidationOfStaffId.setText("Staff ID field is Incorrect");
            staffIdTextField.setForeground(Color.red);
            ivalid = 0;
        }
        if(staffIdTextField.getText().equals(""))
        {
            showValidationOfStaffId.setText("Staff ID field cannot be Empty");
            staffIdTextField.setForeground(Color.white);
            ivalid = 0;
        }
        if(match.matches())
        {
            showValidationOfStaffId.setText(null);
            staffIdTextField.setForeground(Color.white);
            ivalid = 1;
        }
    }                                            

    private void staffNameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {                                               
               String PATTERN = "^[a-zA-Z\\s]{2,22}+$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(staffNameTextField.getText());
        if(!match.matches())
        {
            showValidationOfStaffName.setText("Naming is incorrect!");
            staffNameTextField.setForeground(Color.red);
            snvalid = 0;
        }
        if(staffNameTextField.getText().equals(""))
        {
            showValidationOfStaffName.setText(null);
            staffNameTextField.setForeground(Color.white);
            snvalid = 0;
        }
        if(match.matches())
        {
            showValidationOfStaffName.setText(null);
            staffNameTextField.setForeground(Color.white);
            snvalid = 1;
        }
 
    }                                              

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {                                          
                String PATTERN = "^[a-zA-Z0-9]{0,15}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(passwordField.getText());
        if(!match.matches())
        {
            showValidationOfPassword.setText("Password field is Incorrect");
            passwordField.setForeground(Color.red);
            pvalid = 0;
        }
        if(passwordField.getText().equals(""))
        {
            showValidationOfPassword.setText("Password field cannot be Empty");
            passwordField.setForeground(Color.white);
            pvalid = 0;
        }
        if(match.matches())
        {
            showValidationOfPassword.setText(null);
            passwordField.setForeground(Color.white);
            pvalid = 1;
        }
    }                                         

    private void emailTextFieldKeyReleased(java.awt.event.KeyEvent evt) {                                           
        String PATTERN = "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(emailTextField.getText());
        if(!match.matches())
        {
            showValidationOfEmail.setText("Email Id is incorrect!");
            emailTextField.setForeground(Color.red);
            emailvalid = 0;
        }
        if(emailTextField.getText().equals(""))
        {
            showValidationOfEmail.setText(null);
            emailTextField.setForeground(Color.white);
            emailvalid = 0;
        }
        if(match.matches())
        {
            showValidationOfEmail.setText(null);
            emailTextField.setForeground(Color.white);
            emailvalid = 1;
        }

    }                                          

    private void contactNumberTextFieldKeyReleased(java.awt.event.KeyEvent evt) {                                                   
        String PATTERN = "^[0-9]{10}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(contactNumberTextField.getText());
        if(!match.matches())
        {
            showValidationOfContactNumber.setText("Contact Number should be 10 digit!");
            contactNumberTextField.setForeground(Color.red);
            contactnumbervalid = 0;
        }
        if(contactNumberTextField.getText().equals(""))
        {
            showValidationOfContactNumber.setText(null);
            contactNumberTextField.setForeground(Color.white);
            contactnumbervalid = 0;
        }
        if(match.matches())
        {
            showValidationOfContactNumber.setText(null);
            contactNumberTextField.setForeground(Color.white);
            contactnumbervalid = 1;
        }
    }                                                  

    private void addressTextFieldKeyReleased(java.awt.event.KeyEvent evt) {                                             
                String PATTERN = "^[a-zA-Z0-9\\s]{2,25}+$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(addressTextField.getText());
        if(!match.matches())
        {
            showValidationOfAddress.setText("Naming is incorrect!");
            addressTextField.setForeground(Color.red);
            addressvalid = 0;
        }
        if(addressTextField.getText().equals(""))
        {
            showValidationOfAddress.setText(null);
            addressTextField.setForeground(Color.white);
            addressvalid = 0;
        }
        if(match.matches())
        {
            showValidationOfAddress.setText(null);
            addressTextField.setForeground(Color.white);
            addressvalid = 1;
        }
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staffadd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staffadd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staffadd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staffadd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                staffadd dialog = new staffadd(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    public javax.swing.JButton addButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JSeparator addressSeparator;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton backButton;
    private javax.swing.JSeparator contactNumberSeparator;
    private javax.swing.JTextField contactNumberTextField;
    private javax.swing.JLabel contactnoLabel;
    private javax.swing.JRadioButton day;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JSeparator emailSeparator;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JRadioButton female;
    private javax.swing.JLabel frontNumberLabel;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JPanel dialogPanel;
    private javax.swing.JRadioButton male;
    private javax.swing.JRadioButton morning;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JSeparator passwordSeparator;
    private javax.swing.JLabel photoLabel;
    private javax.swing.ButtonGroup shiftButtonGroup;
    private javax.swing.JLabel shiftLabel;
    private javax.swing.JLabel showValidationOfAddress;
    private javax.swing.JLabel showValidationOfContactNumber;
    private javax.swing.JLabel showValidationOfEmail;
    private javax.swing.JLabel showValidationOfPassword;
    private javax.swing.JLabel showValidationOfStaffId;
    private javax.swing.JLabel showValidationOfStaffName;
    private javax.swing.JCheckBox showpass;
    private javax.swing.JLabel staffIdLabel;
    private javax.swing.JSeparator staffIdSeperator;
    private javax.swing.JTextField staffIdTextField;
    private javax.swing.JLabel staffNameLabel;
    private javax.swing.JSeparator staffNameSeparator;
    private javax.swing.JTextField staffNameTextField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration                   
}
